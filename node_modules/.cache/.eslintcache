[{"/Users/danielpark/notepaca/src/index.tsx":"1","/Users/danielpark/notepaca/src/reportWebVitals.ts":"2","/Users/danielpark/notepaca/src/serviceWorker.ts":"3","/Users/danielpark/notepaca/src/App.tsx":"4","/Users/danielpark/notepaca/src/components/Layout.tsx":"5","/Users/danielpark/notepaca/src/components/Sidebar.tsx":"6","/Users/danielpark/notepaca/src/components/ColorModeSwitcher.tsx":"7","/Users/danielpark/notepaca/src/pages/landing.tsx":"8","/Users/danielpark/notepaca/src/theme.tsx":"9"},{"size":983,"mtime":1687117508968,"results":"10","hashOfConfig":"11"},{"size":416,"mtime":1686766260989,"results":"12","hashOfConfig":"11"},{"size":5258,"mtime":1686766260990,"results":"13","hashOfConfig":"11"},{"size":804,"mtime":1687121221146,"results":"14","hashOfConfig":"11"},{"size":1352,"mtime":1686938991549,"results":"15","hashOfConfig":"11"},{"size":2781,"mtime":1686938307337,"results":"16","hashOfConfig":"11"},{"size":2476,"mtime":1686937945107,"results":"17","hashOfConfig":"11"},{"size":6717,"mtime":1687116754803,"results":"18","hashOfConfig":"11"},{"size":350,"mtime":1686945888042,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"1sci89q",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"23"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"/Users/danielpark/notepaca/src/index.tsx",[],[],[],"/Users/danielpark/notepaca/src/reportWebVitals.ts",[],[],"/Users/danielpark/notepaca/src/serviceWorker.ts",[],[],"/Users/danielpark/notepaca/src/App.tsx",["49","50","51"],[],"/Users/danielpark/notepaca/src/components/Layout.tsx",["52","53","54"],[],"/Users/danielpark/notepaca/src/components/Sidebar.tsx",["55","56","57"],[],"/Users/danielpark/notepaca/src/components/ColorModeSwitcher.tsx",["58"],[],"/Users/danielpark/notepaca/src/pages/landing.tsx",["59","60","61","62"],[],"import {\n  Box,\n  Card,\n  CardBody,\n  CardHeader,\n  Center,\n  Heading,\n  Stack,\n  StackDivider,\n  Text,\n  Image,\n  VStack,\n  Button,\n  HStack,\n  Divider,\n  Input,\n  InputGroup,\n  InputRightElement,\n  Checkbox,\n} from \"@chakra-ui/react\";\nimport { useState } from \"react\";\nimport { BsEye, BsEyeSlash } from \"react-icons/bs\";\nimport { usePostHog } from \"posthog-js/react\";\n\nconst Landing = () => {\n  const posthog = usePostHog();\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const [rememberMe, setRemeberMe] = useState<boolean>(true);\n  const [loginError, setLoginError] = useState<boolean>(false);\n\n  const loginWithOption = (option: string) => {\n    posthog?.capture(\"Option: \" + option);\n    console.log(\"Option:\", option);\n  };\n  return (\n    <Center\n      h=\"100vh\"\n      flexDir=\"column\"\n      w=\"100vw\"\n      backgroundImage=\"home-ui-bg.svg\"\n      pb=\"16\"\n    >\n      <Box\n        rounded=\"xl\"\n        mb=\"5\"\n        mr=\"2.5\"\n        bg=\"white\"\n        shadow=\"2xl\"\n        border=\"1px\"\n        borderColor=\"yellow.400\"\n      >\n        <Heading\n          p=\"3\"\n          textDecoration=\"underline\"\n          textDecorationColor=\"yellow.400\"\n        >\n          NOTEPACA\n        </Heading>\n      </Box>\n\n      <Card\n        mr=\"2.5\"\n        align=\"center\"\n        rounded=\"3xl\"\n        w=\"md\"\n        p=\"1\"\n        shadow=\"2xl\"\n        h=\"2xl\"\n      >\n        <CardHeader\n          rounded=\"2xl\"\n          w=\"full\"\n          //   bgGradient=\"radial(#fde68a 40%, transparent 100%)\"\n        >\n          <VStack textColor=\"#451a03\">\n            <Image\n              bgGradient=\"linear(to-b, #fcd34d , #fffbeb)\"\n              alt=\"logo\"\n              boxSize=\"80px\"\n              rounded=\"full\"\n              src=\"logo192.png\"\n              my=\"2\"\n            />\n            <Heading\n              //   textDecoration=\"underline\"\n              //   textDecorationColor=\"yellow.400\"\n              size=\"md\"\n            >\n              Welcome ðŸ‘‹\n            </Heading>\n            <Text fontSize=\"sm\" textColor=\"blackAlpha.600\" fontWeight=\"medium\">\n              Log in with\n            </Text>\n            <HStack mt=\"4\" w=\"90%\" justify=\"space-between\">\n              <Button\n                shadow=\"lg\"\n                bg=\"white\"\n                w=\"24\"\n                borderBottomRadius=\"none\"\n                borderBottom=\"2px\"\n                borderBottomColor=\"red.300\"\n                onClick={() => loginWithOption(\"google\")}\n              >\n                <Image boxSize=\"30px\" src=\"google.svg\" />\n              </Button>\n              <Button\n                shadow=\"lg\"\n                bg=\"white\"\n                w=\"24\"\n                borderBottomRadius=\"none\"\n                borderBottom=\"2px\"\n                borderBottomColor=\"cyan.500\"\n                onClick={() => loginWithOption(\"twitter\")}\n              >\n                <Image boxSize=\"30px\" src=\"twitter.svg\" />\n              </Button>\n              <Button\n                shadow=\"lg  \"\n                bg=\"white\"\n                w=\"24\"\n                borderBottomRadius=\"none\"\n                borderBottom=\"2px\"\n                borderBottomColor=\"black\"\n                onClick={() => loginWithOption(\"github\")}\n              >\n                <Image boxSize=\"30px\" src=\"github.svg\" />\n              </Button>\n            </HStack>\n          </VStack>\n        </CardHeader>\n        <Text pt=\"3\" fontSize=\"md\" fontWeight=\"bold\">\n          or\n        </Text>\n        <CardBody w=\"full\">\n          <VStack spacing={3} w=\"full\">\n            <VStack align=\"flex-start\" w=\"sm\">\n              <Heading size=\"xs\" textTransform=\"uppercase\">\n                Email Address\n              </Heading>\n              <InputGroup size=\"md\" h=\"10\">\n                <Input\n                  isInvalid={loginError}\n                  focusBorderColor=\"yellow.400\"\n                  errorBorderColor=\"pink.400\"\n                  h=\"10\"\n                  pr=\"32\"\n                  type=\"text\"\n                  placeholder=\"Enter email\"\n                />\n              </InputGroup>\n            </VStack>\n            <VStack align=\"flex-start\" w=\"sm\">\n              <Heading size=\"xs\" textTransform=\"uppercase\">\n                Password\n              </Heading>\n              <InputGroup size=\"md\" h=\"10\">\n                <Input\n                  h=\"10\"\n                  isInvalid={loginError}\n                  pr=\"14\"\n                  focusBorderColor=\"yellow.400\"\n                  errorBorderColor=\"pink.400\"\n                  type={show ? \"text\" : \"password\"}\n                  placeholder=\"Enter password\"\n                />\n                <InputRightElement width=\"10\">\n                  <Button\n                    bg=\"transparent\"\n                    _hover={{ bg: \"transparent\" }}\n                    size=\"sm\"\n                    onClick={handleClick}\n                  >\n                    {show ? (\n                      <BsEyeSlash color=\"gray\" />\n                    ) : (\n                      <BsEye color=\"gray\" />\n                    )}\n                  </Button>\n                </InputRightElement>\n              </InputGroup>\n            </VStack>\n            <HStack w=\"95%\" justify=\"space-between\" mt=\"2\">\n              <Checkbox\n                colorScheme=\"yellow\"\n                defaultChecked\n                isChecked={rememberMe}\n                onChange={() => setRemeberMe(!rememberMe)}\n              >\n                Remember me\n              </Checkbox>\n              <Text\n                onClick={() => console.log(\"hi\")}\n                _hover={{ cursor: \"pointer\" }}\n                textDecoration=\"underline\"\n                textDecorationColor=\"yellow.500\"\n                fontWeight=\"medium\"\n              >\n                Forgot password?\n              </Text>\n            </HStack>\n            <Button\n              mt=\"4\"\n              w=\"full\"\n              h=\"12\"\n              bg=\"yellow.500\"\n              textColor=\"white\"\n              _hover={{ bg: \"yellow.600\" }}\n              onClick={() => console.log(rememberMe)}\n            >\n              Sign in\n            </Button>\n            <HStack>\n              <Text textColor=\"gray.500\" fontWeight=\"medium\">\n                Don't have an account yet?\n              </Text>\n              <Text\n                onClick={() => console.log(\"hi\")}\n                _hover={{ cursor: \"pointer\" }}\n                fontWeight=\"semibold\"\n                textDecoration=\"underline\"\n                textDecorationColor=\"yellow.500\"\n              >\n                Sign Up\n              </Text>\n            </HStack>\n          </VStack>\n        </CardBody>\n      </Card>\n    </Center>\n  );\n};\n\nexport default Landing;\n","/Users/danielpark/notepaca/src/theme.tsx",[],[],{"ruleId":"63","severity":1,"message":"64","line":2,"column":26,"nodeType":"65","messageId":"66","endLine":2,"endColumn":32},{"ruleId":"63","severity":1,"message":"67","line":3,"column":10,"nodeType":"65","messageId":"66","endLine":3,"endColumn":27},{"ruleId":"63","severity":1,"message":"68","line":4,"column":8,"nodeType":"65","messageId":"66","endLine":4,"endColumn":14},{"ruleId":"63","severity":1,"message":"69","line":4,"column":3,"nodeType":"65","messageId":"66","endLine":4,"endColumn":7},{"ruleId":"63","severity":1,"message":"70","line":6,"column":3,"nodeType":"65","messageId":"66","endLine":6,"endColumn":7},{"ruleId":"63","severity":1,"message":"71","line":9,"column":3,"nodeType":"65","messageId":"66","endLine":9,"endColumn":9},{"ruleId":"63","severity":1,"message":"69","line":4,"column":3,"nodeType":"65","messageId":"66","endLine":4,"endColumn":7},{"ruleId":"63","severity":1,"message":"72","line":5,"column":3,"nodeType":"65","messageId":"66","endLine":5,"endColumn":13},{"ruleId":"63","severity":1,"message":"73","line":18,"column":10,"nodeType":"65","messageId":"66","endLine":18,"endColumn":19},{"ruleId":"63","severity":1,"message":"74","line":6,"column":3,"nodeType":"65","messageId":"66","endLine":6,"endColumn":6},{"ruleId":"63","severity":1,"message":"75","line":8,"column":3,"nodeType":"65","messageId":"66","endLine":8,"endColumn":8},{"ruleId":"63","severity":1,"message":"76","line":9,"column":3,"nodeType":"65","messageId":"66","endLine":9,"endColumn":15},{"ruleId":"63","severity":1,"message":"77","line":15,"column":3,"nodeType":"65","messageId":"66","endLine":15,"endColumn":10},{"ruleId":"63","severity":1,"message":"78","line":30,"column":22,"nodeType":"65","messageId":"66","endLine":30,"endColumn":35},"@typescript-eslint/no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'ColorModeSwitcher' is defined but never used.","'Layout' is defined but never used.","'Flex' is defined but never used.","'Text' is defined but never used.","'Button' is defined but never used.","'IconButton' is defined but never used.","'PhoneIcon' is defined but never used.","'Box' is defined but never used.","'Stack' is defined but never used.","'StackDivider' is defined but never used.","'Divider' is defined but never used.","'setLoginError' is assigned a value but never used."]