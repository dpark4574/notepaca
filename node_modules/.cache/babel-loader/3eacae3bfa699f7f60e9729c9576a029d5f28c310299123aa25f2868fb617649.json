{"ast":null,"code":"var _jsxFileName = \"/Users/danielpark/notepaca/src/index.tsx\";\nimport { ColorModeScript } from \"@chakra-ui/react\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom/client\";\nimport { App } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport posthog from \"posthog-js\";\nimport { PostHogProvider } from \"posthog-js/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nposthog.init(process.env.REACT_APP_PUBLIC_POSTHOG_KEY, {\n  api_host: process.env.REACT_APP_PUBLIC_POSTHOG_HOST\n});\nconst container = document.getElementById(\"root\");\nif (!container) throw new Error(\"Failed to find the root element\");\nconst root = ReactDOM.createRoot(container);\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: [/*#__PURE__*/_jsxDEV(ColorModeScript, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(PostHogProvider, {\n    apiKey: process.env.REACT_APP_PUBLIC_POSTHOG_KEY,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 20,\n  columnNumber: 3\n}, this));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["ColorModeScript","React","ReactDOM","App","reportWebVitals","serviceWorker","posthog","PostHogProvider","jsxDEV","_jsxDEV","init","process","env","REACT_APP_PUBLIC_POSTHOG_KEY","api_host","REACT_APP_PUBLIC_POSTHOG_HOST","container","document","getElementById","Error","root","createRoot","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","apiKey","unregister"],"sources":["/Users/danielpark/notepaca/src/index.tsx"],"sourcesContent":["import { ColorModeScript } from \"@chakra-ui/react\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom/client\";\nimport { App } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport posthog from \"posthog-js\";\nimport { PostHogProvider } from \"posthog-js/react\";\n\nposthog.init(process.env.REACT_APP_PUBLIC_POSTHOG_KEY, {\n  api_host: process.env.REACT_APP_PUBLIC_POSTHOG_HOST,\n});\n\nconst container = document.getElementById(\"root\");\nif (!container) throw new Error(\"Failed to find the root element\");\nconst root = ReactDOM.createRoot(container);\n\nroot.render(\n  <React.StrictMode>\n    <ColorModeScript />\n    <PostHogProvider apiKey={process.env.REACT_APP_PUBLIC_POSTHOG_KEY}>\n      <App />\n    </PostHogProvider>\n  </React.StrictMode>\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,SAASA,eAAe,QAAQ,kBAAkB;AAClD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAO,KAAKC,QAAQ,MAAM,kBAAkB;AAC5C,SAASC,GAAG,QAAQ,OAAO;AAC3B,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAO,KAAKC,aAAa,MAAM,iBAAiB;AAEhD,OAAOC,OAAO,MAAM,YAAY;AAChC,SAASC,eAAe,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnDH,OAAO,CAACI,IAAI,CAACC,OAAO,CAACC,GAAG,CAACC,4BAA4B,EAAE;EACrDC,QAAQ,EAAEH,OAAO,CAACC,GAAG,CAACG;AACxB,CAAC,CAAC;AAEF,MAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;AACjD,IAAI,CAACF,SAAS,EAAE,MAAM,IAAIG,KAAK,CAAC,iCAAiC,CAAC;AAClE,MAAMC,IAAI,GAAGlB,QAAQ,CAACmB,UAAU,CAACL,SAAS,CAAC;AAE3CI,IAAI,CAACE,MAAM,eACTb,OAAA,CAACR,KAAK,CAACsB,UAAU;EAAAC,QAAA,gBACff,OAAA,CAACT,eAAe;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,eACnBnB,OAAA,CAACF,eAAe;IAACsB,MAAM,EAAElB,OAAO,CAACC,GAAG,CAACC,4BAA6B;IAAAW,QAAA,eAChEf,OAAA,CAACN,GAAG;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACF,CACpB,CAAC;;AAED;AACA;AACA;AACAvB,aAAa,CAACyB,UAAU,CAAC,CAAC;;AAE1B;AACA;AACA;AACA1B,eAAe,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}